package main

import (
  "fmt"
  "io"
  "log"
  "net/http"
  tus "github.com/eventials/go-tus"
	//"os"
)

var (
  //authKey   = os.Getenv("CLOUDLARE_AUTH_KEY")
  //authEmail = os.Getenv("CLOUDFLARE_AUTH_EMAIL")
  //accountID    = os.Getenv("CLOUDFLARE_ACCOUNT_ID")
  authKey   = "666fae14677f2a04aea9629bb138754eb474e"
  authEmail = "mike@humanagency.org"
  accountID    = "dbe4ee1b8a273b0d74f2658d0347bb6b"
)

func main() {
  http.HandleFunc("/upload", func(w http.ResponseWriter, r *http.Request) {
		log.Printf("auth key %s\n", authKey)
		log.Printf("request %+v\n", r.Body)
    if r.Method != http.MethodPost {
      http.Error(w, "invalid method, requires post", http.StatusBadRequest)
      return
    }



    // copy headers to client
    for name, values := range resp.Header {
      w.Header()[name] = values
    }

    // copy response to client
    io.Copy(w, resp.Body)
    defer resp.Body.Close()
  })

  // listen on localhost:8000
  log.Fatal(http.ListenAndServe(":8000", nil))
}
